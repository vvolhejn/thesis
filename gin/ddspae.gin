# -*-Python-*-
# Just a copy of `solo_instrument.gin`.
# Decodes from (loudness, f0). Has a trainable reverb component as well.
# Since it uses a trainable reverb, training data should all be from the same
# acoustic environment.

include 'models/ae.gin'


Autoencoder:
    encoder = None
    decoder = @decoders.RnnFcDecoder()

RnnFcDecoder:
    rnn_channels = 512
    rnn_type = 'gru'
    ch = 512
    layers_per_stack = 3
    input_keys = ('ld_scaled', 'f0_scaled')
    output_splits = (
        ('amps', 1),
        ('harmonic_distribution', 60),
        ('noise_magnitudes', 65),
       )

# ==============
# ProcessorGroup
# ==============

ProcessorGroup.dag = [
  (@synths.Harmonic(),
    ['amps', 'harmonic_distribution', 'f0_hz']),
  (@synths.FilteredNoise(),
    ['noise_magnitudes']),
  (@processors.Add(),
    ['filtered_noise/signal', 'harmonic/signal']),
  (@effects.Reverb(),
    ['add/signal']),
]

# Reverb
Reverb:
    name = 'reverb'
    reverb_length = 48000
    trainable = True

# Log spectrograms.
train_util.train.model_specific_summary_fn = @summarize_ddspae